from crud import (
    crear_grupo_mk,
    crear_integrante_mk,
    obtener_grupos_con_integrantes_mk
)
from app import app
from models import db

# Lista de participantes (√∫nicos, sin repetir)
participantes = [
    "Elkin Garc√≠a", "Jakel Brenes", "Luis Alberto", "Gerald", "Ian Chavarr√≠a",
    "Rachel Odette", "Juan David Mora", "Mattias Zeled√≥n", "Diego Esquivel",
    "Christopher Mendoza", "Sim√≥n Azofifa", "Andr√©s Fonseca", "Keylor Nu√±ez",
    "Ibrahim Arguello", "Kevin Nicaragua", "Gabriel Obando", "Sebasti√°n Moreno",
    "Bradley Abarca", "Alexander L√≥pez", "Nelson B√°ez", "Brandon Smith",
    "Jeancarlo Hern√°ndez", "Elkin Guti√©rrez", "Kenyet Arce", "Mar√≠a Jos√© Valledares",
    "Tiffany Vargas", "Samuel P√©rez", "Wensy Castillo", "Julissa Carrillo",
    "Samuel Calder√≥n", "Randy Cruz", "Cesar Medina", "Gleyner Alem√°n",
    "Jefferson Naranjo", "Mois√©s Martinez", "Esteban Garc√≠a", "Rachel Vazquez",
    "Sebasti√°n Aguirres"
]

# Crear nombres de grupos
nombres_grupos_mk = [f"MK Grupo #{i}" for i in range(1, 9)]  # 8 grupos

with app.app_context():
    db.drop_all()
    db.create_all()

    print("üå± Creando grupos MK...")
    grupos = {}
    for nombre in nombres_grupos_mk:
        grupo = crear_grupo_mk(nombre)
        grupos[nombre] = grupo.id
        print(f"‚úÖ {nombre} creado con ID {grupo.id}")

    print("\nüë• A√±adiendo integrantes a grupos MK...")
    grupo_nombres = list(grupos.keys())
    grupo_index = 0

    for i, participante in enumerate(participantes):
        grupo_actual = grupo_nombres[grupo_index]
        crear_integrante_mk(participante, grupos[grupo_actual])
        print(f"‚ûï {participante} a√±adido a {grupo_actual}")
        
        # Avanzar grupo (distribuci√≥n equitativa, cada grupo recibe un integrante en ronda)
        grupo_index = (grupo_index + 1) % len(grupo_nombres)

    print("\nüìã Estructura actual de grupos MK:")
    print(obtener_grupos_con_integrantes_mk())

    print("\n‚úÖ Base de datos MK poblada correctamente.")
